plugins {
    id 'java'
    id "com.gradleup.shadow" version "8.3.1"
}

group = 'me.dunescifye'
version = '1.0.4'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://maven.playpro.com'
    }
    maven {
        url = "https://hub.jeff-media.com/nexus/repository/jeff-media-public/"
    }
    maven { // Factions
        url = "https://jitpack.io/"
    }
    maven {
        url = "https://maven.enginehub.org/repo/"
    }
    maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots" }
    maven { //FactionsUUID
        url = "https://dependency.download/releases"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.8'
    compileOnly 'com.github.GriefPrevention:GriefPrevention:16.18.2'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'
    compileOnly 'com.github.SaberLLC:Saber-Factions:4.1.4-STABLE'
    implementation 'com.jeff-media:MorePersistentDataTypes:2.4.0'
    implementation 'com.jeff-media:custom-block-data:2.2.2'
    implementation "dev.jorel:commandapi-bukkit-shade:10.0.1"
}

shadowJar {
    relocate 'com.jeff_media.customblockdata', 'me.dunescifye.libs.customblockdata'
    relocate 'com.jeff_media.morepersistentdatatypes', 'me.dunescifye.libs.morepersistentdatatypes'
    relocate 'dev.jorel.commandapi', 'me.dunescifye.libs.lunaritems.commandapi'
    archiveBaseName.set("LunarItems")
    archiveClassifier.set("") // removes the "-all" suffix
    archiveVersion.set("")    // removes the version number
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}